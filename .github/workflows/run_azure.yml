name: Run pipeline for Azure DevOps

on:
  workflow_dispatch:
    inputs:
      collection:
        description: 'Azure DevOps Collection'
        required: true
        default: 'https://dev.azure.com/vtaldevops'
      source_project:
        description: 'Source Project Name'
        required: true
        default: ''
      source_repo:
        description: 'Source Repository Name'
        required: true
        default: ''
      target_project:
        description: 'Target Project Name'
        required: true
        default: ''
      target_repo:
        description: 'Target Repository Name'
        required: true
        default: ''
      run_main:
        description: 'Create main.tf?'
        required: true
        type: boolean
        default: true
      run_import:
        description: 'Create import.tf?'
        required: true
        type: boolean
        default: true
      run_plan:
        description: 'Run terraform plan?'
        required: true
        type: boolean
        default: true
      run_apply:
        description: 'Run terraform apply?'
        required: true
        type: boolean
        default: false
      debug:
        description: 'Debug?'
        required: true
        type: boolean
        default: false
        
jobs:
  run-python-script:
    runs-on: ubuntu-latest
    # runs-on: self-hosted # Usa o seu agente self-hosted
    env:
      PYTHON_PATH: 'python'
      SYSTEM_COLLECTIONURI: ${{ github.event.inputs.collection }}
      SOURCE_PROJECT: ${{ github.event.inputs.source_project }}
      SOURCE_REPO: ${{ github.event.inputs.source_repo }}
      TARGET_PROJECT: ${{ github.event.inputs.target_project }}
      TARGET_REPO: ${{ github.event.inputs.target_repo }}
      RUN_MAIN: ${{ github.event.inputs.run_main }}
      RUN_IMPORT: ${{ github.event.inputs.run_import }}
      RUN_PLAN: ${{ github.event.inputs.run_plan }}
      RUN_APPLY: ${{ github.event.inputs.run_apply }}
      DEBUG: ${{ github.event.inputs.debug }}
      ACTIONS_RUNNER_DEBUG: ${{ github.event.inputs.debug }}
      ACTIONS_STEP_DEBUG: ${{ github.event.inputs.debug }}
      ACTIONS_RUNNER_HTTPTRACE: ${{ github.event.inputs.debug }}
      AZURE_DEVOPS_EXT_PAT: ${{ secrets.SEC_AZURE_DEVOPS_EXT_PAT }}
      GITHUB_TOKEN: ${{ secrets.SEC_GITHUB_TOKEN }}

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: Check Python (inline)
        run: |
          set +e
          which ${PYTHON_PATH} 
          ${PYTHON_PATH} --version

      - name: Extracao Azure Projeto
        if: ${{ success() }}
        run: |
          ${PYTHON_PATH} extract_azure_devops_api_data.py "${SYSTEM_COLLECTIONURI}_apis/projects/${PRJ_ID}?api-version=7.1&includeCapabilities=true"|${PYTHON_PATH} terraform_azure_devops_project.py

      - name: Extracao Azure Repos
        if: ${{ success() }}
        run: |
          ${PYTHON_PATH} extract_azure_devops_api_data.py "${SYSTEM_COLLECTIONURI}${PRJ_ID}/_apis/git/repositories?api-version=7.1"|jq "[.[]|select(.name==\"${REPOS}\")]"|${PYTHON_PATH} terraform_azure_devops_repos.py

      - name: Extracao Azure Variablegroup
        if: ${{ success() }}
        run: |
          ${PYTHON_PATH} extract_azure_devops_api_data.py "${SYSTEM_COLLECTIONURI}${PRJ_ID}/_apis/distributedtask/variablegroups?\$top=10000&api-version=7.1"|${PYTHON_PATH} terraform_azure_devops_variablegroups.py
          
